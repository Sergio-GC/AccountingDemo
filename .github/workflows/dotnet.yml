name: .NET CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/TestResults/
          **/coverage/
        retention-days: 30

  # Optional: Add code coverage
  coverage:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install coverlet.collector
      run: dotnet tool install --global coverlet.collector

    - name: Run tests with coverage
      run: |
        dotnet test --collect:"XPlat Code Coverage" --results-directory ./coverage/
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator -reports:"./coverage/**/coverage.cobertura.xml" -targetdir:"./coverage/reports" -reporttypes:Html

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: ./coverage/reports/
        retention-days: 30

  # Optional: Build and publish API
  build-api:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish API
      run: dotnet publish AccountingDemoAPI/AccountingDemoAPI.csproj -c Release -o ./publish/api

    - name: Upload API artifacts
      uses: actions/upload-artifact@v4
      with:
        name: api-artifacts
        path: ./publish/api/
        retention-days: 30

  # Optional: Build and publish Web App
  build-webapp:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish Web App
      run: dotnet publish WebApp/WebApp.csproj -c Release -o ./publish/webapp

    - name: Upload Web App artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp-artifacts
        path: ./publish/webapp/
        retention-days: 30 