name: Docker CI/CD

on:
  push:
    branches: [ main, master, develop, Testing ]
  pull_request:
    branches: [ main, master ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

  build-docker-images:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/Testing')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build API Docker image
      run: |
        docker build -f AccountingDemoAPI/Dockerfile -t accountingdemo-api:${{ github.sha }} .
        docker build -f AccountingDemoAPI/Dockerfile -t accountingdemo-api:latest .

    - name: Build WebApp Docker image
      run: |
        docker build -f WebApp/Dockerfile -t accountingdemo-webapp:${{ github.sha }} .
        docker build -f WebApp/Dockerfile -t accountingdemo-webapp:latest .

    - name: Save Docker images
      uses: actions/upload-artifact@v4
      with:
        name: docker-images
        path: |
          /tmp/docker-images/
        retention-days: 30

    # Optional: Push to Docker Hub or GitHub Container Registry
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Push Docker images
    #   run: |
    #     docker push yourusername/accountingdemo-api:latest
    #     docker push yourusername/accountingdemo-webapp:latest 